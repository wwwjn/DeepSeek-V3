W0725 16:57:39.029000 1491143 site-packages/torch/distributed/run.py:774] 
W0725 16:57:39.029000 1491143 site-packages/torch/distributed/run.py:774] *****************************************
W0725 16:57:39.029000 1491143 site-packages/torch/distributed/run.py:774] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W0725 16:57:39.029000 1491143 site-packages/torch/distributed/run.py:774] *****************************************
[2025-07-25 16:57:45][rank0][INFO] Starting process with rank 0/8 (local_rank: 0)
[2025-07-25 16:57:48][rank0][INFO] Using device: NVIDIA H100 (CUDA:0)
[2025-07-25 16:57:48][rank0][INFO] Model configuration: ModelArgs(max_batch_size=8, max_seq_len=16384, dtype='fp8', vocab_size=129280, dim=7168, inter_dim=18432, moe_inter_dim=2048, n_layers=5, n_dense_layers=3, n_heads=128, n_routed_experts=256, n_shared_experts=1, n_activated_experts=8, n_expert_groups=8, n_limited_groups=4, score_func='sigmoid', route_scale=2.5, q_lora_rank=1536, kv_lora_rank=512, qk_nope_head_dim=128, qk_rope_head_dim=64, v_head_dim=128, original_seq_len=4096, rope_theta=10000.0, rope_factor=40, beta_fast=32, beta_slow=1, mscale=1.0)
[2025-07-25 16:57:48][rank0][INFO] Loading model from /data/users/jianiw/dsv3-weights-5-layer/
[2025-07-25 16:57:48][rank0][INFO] Loading from file: /data/users/jianiw/dsv3-weights-5-layer/model0-mp8.safetensors
[2025-07-25 16:57:49][rank0][INFO] Running single forward pass with sequence length 2048, batch size 1
[2025-07-25 16:57:49][rank0][INFO] Fake input token IDs: [104582   2770 108058  84693   6187  63316  64494  93807  35481 104983]...
[2025-07-25 16:57:49][rank0][INFO] Fake input shape: torch.Size([1, 2048])
[2025-07-25 16:57:49][rank0][INFO] Input tensors device: cuda:0
NCCL version 2.27.5+cuda12.9
[2025-07-25 16:57:54][rank0][INFO] Before rotary embedding q_pe:  - Shape: torch.Size([1, 2048, 16, 64]) Mean: 0.017700, Min: -12.187500, Max: 7.750000, Std: 1.484375, First 10 values: [-0.0546875, -0.310546875, -0.053466796875, 0.236328125, -0.306640625, -0.0140380859375, 0.1357421875, -0.953125, -0.462890625, 0.458984375]
[2025-07-25 16:57:54][rank0][INFO] After rotary embedding q_pe:  - Shape: torch.Size([1, 2048, 16, 64]) Mean: 0.103516, Min: -12.187500, Max: 8.937500, Std: 1.484375, First 10 values: [-0.0546875, -0.310546875, -0.053466796875, 0.236328125, -0.306640625, -0.0140380859375, 0.1357421875, -0.953125, -0.462890625, 0.458984375]
[2025-07-25 16:57:54][rank0][INFO] Before rotary embedding k_pe:  - Shape: torch.Size([1, 2048, 64]) Mean: -0.042725, Min: -20.375000, Max: 24.625000, Std: 0.660156, First 10 values: [-0.7890625, -0.1982421875, -0.5546875, 0.83203125, -0.51171875, -0.265625, 0.103515625, -0.50390625, -0.375, -0.96484375]
[2025-07-25 16:57:54][rank0][INFO] After rotary embedding k_pe:  - Shape: torch.Size([1, 2048, 1, 64]) Mean: 0.011963, Min: -20.375000, Max: 24.625000, Std: 0.660156, First 10 values: [-0.7890625, -0.1982421875, -0.5546875, 0.83203125, -0.51171875, -0.265625, 0.103515625, -0.50390625, -0.375, -0.96484375]
[2025-07-25 16:57:54][rank0][INFO] After attention wo:  - Shape: torch.Size([1, 2048, 7168]) Mean: -0.000042, Min: -0.470703, Max: 1.515625, Std: 0.019653, First 10 values: [-0.0084228515625, 0.010009765625, -0.0008392333984375, 0.01007080078125, -0.001434326171875, 0.00494384765625, -0.0145263671875, 0.0235595703125, 0.0115966796875, -0.0025787353515625]
[2025-07-25 16:57:54][rank0][INFO] Before rotary embedding q_pe:  - Shape: torch.Size([1, 2048, 16, 64]) Mean: -0.020752, Min: -24.000000, Max: 43.250000, Std: 3.031250, First 10 values: [-0.400390625, 1.046875, -1.2109375, -0.6328125, 0.71875, -1.140625, 0.94140625, 0.90625, 0.2060546875, 0.78515625]
[2025-07-25 16:57:54][rank0][INFO] After rotary embedding q_pe:  - Shape: torch.Size([1, 2048, 16, 64]) Mean: 0.110352, Min: -43.000000, Max: 42.750000, Std: 3.031250, First 10 values: [-0.400390625, 1.046875, -1.2109375, -0.6328125, 0.71875, -1.140625, 0.94140625, 0.90625, 0.2060546875, 0.78515625]
[2025-07-25 16:57:54][rank0][INFO] Before rotary embedding k_pe:  - Shape: torch.Size([1, 2048, 64]) Mean: 0.008789, Min: -4.625000, Max: 9.062500, Std: 1.437500, First 10 values: [1.453125, 2.890625, -1.421875, 0.2138671875, 0.212890625, -1.4765625, 1.5625, 0.1044921875, 0.5703125, 0.40234375]
[2025-07-25 16:57:54][rank0][INFO] After rotary embedding k_pe:  - Shape: torch.Size([1, 2048, 1, 64]) Mean: 0.057373, Min: -4.375000, Max: 9.062500, Std: 1.437500, First 10 values: [1.453125, 2.890625, -1.421875, 0.2138671875, 0.212890625, -1.4765625, 1.5625, 0.1044921875, 0.5703125, 0.40234375]
[2025-07-25 16:57:54][rank0][INFO] After attention wo:  - Shape: torch.Size([1, 2048, 7168]) Mean: 0.000016, Min: -0.154297, Max: 0.237305, Std: 0.007782, First 10 values: [-0.003936767578125, 0.0038909912109375, 0.0098876953125, -0.009765625, -0.0014495849609375, 0.01300048828125, 0.006378173828125, 0.014892578125, 0.00347900390625, -0.00482177734375]
[2025-07-25 16:57:54][rank0][INFO] Before rotary embedding q_pe:  - Shape: torch.Size([1, 2048, 16, 64]) Mean: 0.152344, Min: -12.687500, Max: 16.500000, Std: 2.562500, First 10 values: [2.03125, 0.1943359375, 2.09375, 0.83984375, 0.7578125, -0.72265625, -1.2578125, -0.87890625, -0.322265625, -1.1328125]
[2025-07-25 16:57:54][rank0][INFO] After rotary embedding q_pe:  - Shape: torch.Size([1, 2048, 16, 64]) Mean: 0.111816, Min: -14.750000, Max: 17.000000, Std: 2.562500, First 10 values: [2.03125, 0.1943359375, 2.09375, 0.83984375, 0.7578125, -0.72265625, -1.2578125, -0.87890625, -0.322265625, -1.1328125]
[2025-07-25 16:57:54][rank0][INFO] Before rotary embedding k_pe:  - Shape: torch.Size([1, 2048, 64]) Mean: 0.083496, Min: -9.000000, Max: 4.593750, Std: 1.257812, First 10 values: [2.125, -0.5703125, 0.91015625, -1.40625, -0.8203125, -1.3671875, 0.55078125, -0.7265625, -1.1171875, -1.3125]
[2025-07-25 16:57:54][rank0][INFO] After rotary embedding k_pe:  - Shape: torch.Size([1, 2048, 1, 64]) Mean: 0.075684, Min: -9.000000, Max: 4.531250, Std: 1.257812, First 10 values: [2.125, -0.5703125, 0.91015625, -1.40625, -0.8203125, -1.3671875, 0.55078125, -0.7265625, -1.1171875, -1.3125]
[2025-07-25 16:57:54][rank0][INFO] After attention wo:  - Shape: torch.Size([1, 2048, 7168]) Mean: 0.000093, Min: -0.104980, Max: 0.296875, Std: 0.004761, First 10 values: [0.007049560546875, -0.004150390625, 0.009033203125, -0.007354736328125, -0.00119781494140625, -0.0018310546875, 0.00628662109375, 0.00830078125, -0.010009765625, -0.01007080078125]
[2025-07-25 16:57:54][rank0][INFO] Before rotary embedding q_pe:  - Shape: torch.Size([1, 2048, 16, 64]) Mean: -0.105469, Min: -31.875000, Max: 16.375000, Std: 2.375000, First 10 values: [-0.494140625, -0.76171875, -0.259765625, 5.21875, 2.34375, 2.0625, 3.5625, -7.25, 2.46875, -6.21875]
[2025-07-25 16:57:54][rank0][INFO] After rotary embedding q_pe:  - Shape: torch.Size([1, 2048, 16, 64]) Mean: -0.142578, Min: -29.375000, Max: 30.375000, Std: 2.375000, First 10 values: [-0.494140625, -0.76171875, -0.259765625, 5.21875, 2.34375, 2.0625, 3.5625, -7.25, 2.46875, -6.21875]
[2025-07-25 16:57:54][rank0][INFO] Before rotary embedding k_pe:  - Shape: torch.Size([1, 2048, 64]) Mean: -0.132812, Min: -7.375000, Max: 2.937500, Std: 1.375000, First 10 values: [-1.3984375, -3.03125, 1.875, -0.28125, 0.443359375, -1.6484375, -0.69921875, 1.5390625, -0.34765625, 1.5859375]
[2025-07-25 16:57:54][rank0][INFO] After rotary embedding k_pe:  - Shape: torch.Size([1, 2048, 1, 64]) Mean: -0.202148, Min: -7.375000, Max: 3.593750, Std: 1.367188, First 10 values: [-1.3984375, -3.03125, 1.875, -0.28125, 0.443359375, -1.6484375, -0.69921875, 1.5390625, -0.34765625, 1.5859375]
[2025-07-25 16:57:54][rank0][INFO] After attention wo:  - Shape: torch.Size([1, 2048, 7168]) Mean: 0.000008, Min: -0.621094, Max: 0.238281, Std: 0.012939, First 10 values: [-0.00347900390625, 0.00160980224609375, 0.00677490234375, -0.0302734375, -0.00433349609375, 0.0035858154296875, -0.01055908203125, -0.0087890625, 0.006195068359375, 0.00439453125]
[2025-07-25 16:57:54][rank0][INFO] Before rotary embedding q_pe:  - Shape: torch.Size([1, 2048, 16, 64]) Mean: -0.194336, Min: -29.500000, Max: 27.000000, Std: 4.375000, First 10 values: [0.33984375, -1.046875, -3.671875, 0.474609375, 0.353515625, 1.546875, 0.310546875, -1.4453125, -1.5234375, 1.234375]
[2025-07-25 16:57:54][rank0][INFO] After rotary embedding q_pe:  - Shape: torch.Size([1, 2048, 16, 64]) Mean: -0.330078, Min: -28.750000, Max: 28.750000, Std: 4.375000, First 10 values: [0.33984375, -1.046875, -3.671875, 0.474609375, 0.353515625, 1.546875, 0.310546875, -1.4453125, -1.5234375, 1.234375]
[2025-07-25 16:57:54][rank0][INFO] Before rotary embedding k_pe:  - Shape: torch.Size([1, 2048, 64]) Mean: -0.076660, Min: -2.375000, Max: 2.296875, Std: 0.605469, First 10 values: [-0.28125, 0.255859375, 0.291015625, 0.07177734375, -0.265625, -0.044189453125, 0.0162353515625, 0.30859375, -0.171875, -0.33203125]
[2025-07-25 16:57:54][rank0][INFO] After rotary embedding k_pe:  - Shape: torch.Size([1, 2048, 1, 64]) Mean: -0.056885, Min: -2.375000, Max: 2.281250, Std: 0.605469, First 10 values: [-0.28125, 0.255859375, 0.291015625, 0.07177734375, -0.265625, -0.044189453125, 0.0162353515625, 0.30859375, -0.171875, -0.33203125]
[2025-07-25 16:57:54][rank0][INFO] After attention wo:  - Shape: torch.Size([1, 2048, 7168]) Mean: 0.000010, Min: -0.351562, Max: 0.186523, Std: 0.015320, First 10 values: [-0.00994873046875, -0.0017852783203125, -0.002532958984375, -0.00445556640625, -0.003326416015625, -0.0001583099365234375, 0.0002002716064453125, -0.0024871826171875, -0.000446319580078125, -0.00102996826171875]
[2025-07-25 16:57:55][rank0][INFO] Forward pass completed in 6.5934 seconds
[2025-07-25 16:57:55][rank0][INFO] Output shape: torch.Size([1, 129280])
[2025-07-25 16:57:55][rank0][INFO] Output stats - Mean: 0.0378, Min: -11.6250, Max: 10.7500
[2025-07-25 16:57:55][rank0][INFO] GPU memory allocated: 4.13 GB
[2025-07-25 16:57:55][rank0][INFO] GPU memory reserved: 5.43 GB
[2025-07-25 16:57:55][rank0][INFO] Rank 0 completed successfully
