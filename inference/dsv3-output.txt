W0725 16:13:39.666000 140654445146560 torch/distributed/run.py:779] 
W0725 16:13:39.666000 140654445146560 torch/distributed/run.py:779] *****************************************
W0725 16:13:39.666000 140654445146560 torch/distributed/run.py:779] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W0725 16:13:39.666000 140654445146560 torch/distributed/run.py:779] *****************************************
[2025-07-25 16:13:45][rank0][INFO] Starting process with rank 0/8 (local_rank: 0)
[2025-07-25 16:13:47][rank0][INFO] Using device: NVIDIA H100 (CUDA:0)
[2025-07-25 16:13:47][rank0][INFO] Model configuration: ModelArgs(max_batch_size=8, max_seq_len=16384, dtype='fp8', vocab_size=129280, dim=7168, inter_dim=18432, moe_inter_dim=2048, n_layers=5, n_dense_layers=3, n_heads=128, n_routed_experts=256, n_shared_experts=1, n_activated_experts=8, n_expert_groups=8, n_limited_groups=4, score_func='sigmoid', route_scale=2.5, q_lora_rank=1536, kv_lora_rank=512, qk_nope_head_dim=128, qk_rope_head_dim=64, v_head_dim=128, original_seq_len=4096, rope_theta=10000.0, rope_factor=40, beta_fast=32, beta_slow=1, mscale=1.0)
[2025-07-25 16:13:49][rank0][INFO] Loading model from /data/users/jianiw/dsv3-weights-5-layer/
[2025-07-25 16:13:49][rank0][INFO] Loading from file: /data/users/jianiw/dsv3-weights-5-layer/model0-mp8.safetensors
[2025-07-25 16:13:50][rank0][INFO] Running single forward pass with sequence length 2048, batch size 1
[2025-07-25 16:13:50][rank0][INFO] Fake input token IDs: [104582   2770 108058  84693   6187  63316  64494  93807  35481 104983]...
[2025-07-25 16:13:50][rank0][INFO] Fake input shape: torch.Size([1, 2048])
[2025-07-25 16:13:50][rank0][INFO] Input tensors device: cuda:0
NCCL version 2.20.5+cuda12.4
[2025-07-25 16:14:00][rank0][INFO] Before rotary embedding q_pe:  - Shape: torch.Size([1, 2048, 16, 64]) Mean: 0.017700, Min: -12.187500, Max: 7.750000, Std: 1.484375, First 10 values: [-0.054443359375, -0.310546875, -0.052978515625, 0.236328125, -0.306640625, -0.013671875, 0.1357421875, -0.953125, -0.46484375, 0.4609375]
[2025-07-25 16:14:00][rank0][INFO] After rotary embedding q_pe:  - Shape: torch.Size([1, 2048, 16, 64]) Mean: 0.103516, Min: -12.187500, Max: 8.937500, Std: 1.484375, First 10 values: [-0.054443359375, -0.310546875, -0.052978515625, 0.236328125, -0.306640625, -0.013671875, 0.1357421875, -0.953125, -0.46484375, 0.4609375]
[2025-07-25 16:14:00][rank0][INFO] Before rotary embedding k_pe:  - Shape: torch.Size([1, 2048, 64]) Mean: -0.042725, Min: -20.375000, Max: 24.625000, Std: 0.660156, First 10 values: [-0.7890625, -0.1982421875, -0.5546875, 0.83203125, -0.51171875, -0.265625, 0.103515625, -0.50390625, -0.375, -0.96484375]
[2025-07-25 16:14:00][rank0][INFO] After rotary embedding k_pe:  - Shape: torch.Size([1, 2048, 1, 64]) Mean: 0.011963, Min: -20.375000, Max: 24.625000, Std: 0.660156, First 10 values: [-0.7890625, -0.1982421875, -0.5546875, 0.83203125, -0.51171875, -0.265625, 0.103515625, -0.50390625, -0.375, -0.96484375]
[2025-07-25 16:14:00][rank0][INFO] After attention wo:  - Shape: torch.Size([1, 2048, 7168]) Mean: -0.000042, Min: -0.468750, Max: 1.507812, Std: 0.019653, First 10 values: [-0.0084228515625, 0.010009765625, -0.000858306884765625, 0.01007080078125, -0.00146484375, 0.0048828125, -0.0145263671875, 0.0235595703125, 0.0115966796875, -0.0025634765625]
[2025-07-25 16:14:00][rank0][INFO] Before rotary embedding q_pe:  - Shape: torch.Size([1, 2048, 16, 64]) Mean: -0.020752, Min: -24.125000, Max: 43.250000, Std: 3.031250, First 10 values: [-0.400390625, 1.046875, -1.2109375, -0.6328125, 0.71875, -1.140625, 0.9375, 0.90234375, 0.2060546875, 0.78125]
[2025-07-25 16:14:00][rank0][INFO] After rotary embedding q_pe:  - Shape: torch.Size([1, 2048, 16, 64]) Mean: 0.109863, Min: -43.000000, Max: 42.750000, Std: 3.031250, First 10 values: [-0.400390625, 1.046875, -1.2109375, -0.6328125, 0.71875, -1.140625, 0.9375, 0.90234375, 0.2060546875, 0.78125]
[2025-07-25 16:14:00][rank0][INFO] Before rotary embedding k_pe:  - Shape: torch.Size([1, 2048, 64]) Mean: 0.008789, Min: -4.625000, Max: 9.062500, Std: 1.437500, First 10 values: [1.453125, 2.890625, -1.4296875, 0.21484375, 0.212890625, -1.4765625, 1.5625, 0.1025390625, 0.57421875, 0.400390625]
[2025-07-25 16:14:00][rank0][INFO] After rotary embedding k_pe:  - Shape: torch.Size([1, 2048, 1, 64]) Mean: 0.057373, Min: -4.375000, Max: 9.062500, Std: 1.437500, First 10 values: [1.453125, 2.890625, -1.4296875, 0.21484375, 0.212890625, -1.4765625, 1.5625, 0.1025390625, 0.57421875, 0.400390625]
[2025-07-25 16:14:00][rank0][INFO] After attention wo:  - Shape: torch.Size([1, 2048, 7168]) Mean: 0.000016, Min: -0.154297, Max: 0.237305, Std: 0.007782, First 10 values: [-0.00390625, 0.0037841796875, 0.0098876953125, -0.009765625, -0.001373291015625, 0.01312255859375, 0.006439208984375, 0.014892578125, 0.0034027099609375, -0.00482177734375]
[2025-07-25 16:14:00][rank0][INFO] Before rotary embedding q_pe:  - Shape: torch.Size([1, 2048, 16, 64]) Mean: 0.151367, Min: -12.750000, Max: 16.500000, Std: 2.562500, First 10 values: [2.03125, 0.1982421875, 2.078125, 0.83984375, 0.76171875, -0.71484375, -1.2578125, -0.87890625, -0.31640625, -1.1171875]
[2025-07-25 16:14:00][rank0][INFO] After rotary embedding q_pe:  - Shape: torch.Size([1, 2048, 16, 64]) Mean: 0.111816, Min: -14.750000, Max: 17.000000, Std: 2.562500, First 10 values: [2.03125, 0.1982421875, 2.078125, 0.83984375, 0.76171875, -0.71484375, -1.2578125, -0.87890625, -0.31640625, -1.1171875]
[2025-07-25 16:14:00][rank0][INFO] Before rotary embedding k_pe:  - Shape: torch.Size([1, 2048, 64]) Mean: 0.083496, Min: -9.000000, Max: 4.625000, Std: 1.257812, First 10 values: [2.125, -0.5703125, 0.9140625, -1.40625, -0.8203125, -1.3671875, 0.55078125, -0.73046875, -1.1171875, -1.3125]
[2025-07-25 16:14:00][rank0][INFO] After rotary embedding k_pe:  - Shape: torch.Size([1, 2048, 1, 64]) Mean: 0.075684, Min: -9.000000, Max: 4.562500, Std: 1.257812, First 10 values: [2.125, -0.5703125, 0.9140625, -1.40625, -0.8203125, -1.3671875, 0.55078125, -0.73046875, -1.1171875, -1.3125]
[2025-07-25 16:14:00][rank0][INFO] After attention wo:  - Shape: torch.Size([1, 2048, 7168]) Mean: 0.000093, Min: -0.104492, Max: 0.296875, Std: 0.004761, First 10 values: [0.007049560546875, -0.004119873046875, 0.00909423828125, -0.00732421875, -0.0012359619140625, -0.00191497802734375, 0.00634765625, 0.00830078125, -0.010009765625, -0.01007080078125]
[2025-07-25 16:14:00][rank0][INFO] Before rotary embedding q_pe:  - Shape: torch.Size([1, 2048, 16, 64]) Mean: -0.105469, Min: -31.875000, Max: 16.375000, Std: 2.375000, First 10 values: [-0.50390625, -0.765625, -0.259765625, 5.21875, 2.34375, 2.078125, 3.578125, -7.25, 2.484375, -6.21875]
[2025-07-25 16:14:00][rank0][INFO] After rotary embedding q_pe:  - Shape: torch.Size([1, 2048, 16, 64]) Mean: -0.142578, Min: -29.500000, Max: 30.375000, Std: 2.375000, First 10 values: [-0.50390625, -0.765625, -0.259765625, 5.21875, 2.34375, 2.078125, 3.578125, -7.25, 2.484375, -6.21875]
[2025-07-25 16:14:00][rank0][INFO] Before rotary embedding k_pe:  - Shape: torch.Size([1, 2048, 64]) Mean: -0.132812, Min: -7.375000, Max: 2.921875, Std: 1.375000, First 10 values: [-1.3984375, -3.03125, 1.8671875, -0.28125, 0.443359375, -1.6484375, -0.69921875, 1.5390625, -0.345703125, 1.5859375]
[2025-07-25 16:14:00][rank0][INFO] After rotary embedding k_pe:  - Shape: torch.Size([1, 2048, 1, 64]) Mean: -0.202148, Min: -7.375000, Max: 3.593750, Std: 1.367188, First 10 values: [-1.3984375, -3.03125, 1.8671875, -0.28125, 0.443359375, -1.6484375, -0.69921875, 1.5390625, -0.345703125, 1.5859375]
[2025-07-25 16:14:00][rank0][INFO] After attention wo:  - Shape: torch.Size([1, 2048, 7168]) Mean: 0.000008, Min: -0.617188, Max: 0.237305, Std: 0.012939, First 10 values: [-0.00347900390625, 0.00164794921875, 0.0068359375, -0.030029296875, -0.004302978515625, 0.003570556640625, -0.01068115234375, -0.0087890625, 0.006195068359375, 0.00439453125]
[2025-07-25 16:14:00][rank0][INFO] Before rotary embedding q_pe:  - Shape: torch.Size([1, 2048, 16, 64]) Mean: -0.194336, Min: -29.625000, Max: 27.000000, Std: 4.375000, First 10 values: [0.3359375, -1.046875, -3.6875, 0.484375, 0.353515625, 1.546875, 0.314453125, -1.4375, -1.5234375, 1.2265625]
[2025-07-25 16:14:00][rank0][INFO] After rotary embedding q_pe:  - Shape: torch.Size([1, 2048, 16, 64]) Mean: -0.330078, Min: -28.625000, Max: 28.875000, Std: 4.375000, First 10 values: [0.3359375, -1.046875, -3.6875, 0.484375, 0.353515625, 1.546875, 0.314453125, -1.4375, -1.5234375, 1.2265625]
[2025-07-25 16:14:00][rank0][INFO] Before rotary embedding k_pe:  - Shape: torch.Size([1, 2048, 64]) Mean: -0.076660, Min: -2.390625, Max: 2.281250, Std: 0.605469, First 10 values: [-0.28125, 0.255859375, 0.291015625, 0.07177734375, -0.263671875, -0.044189453125, 0.01611328125, 0.306640625, -0.1708984375, -0.33203125]
[2025-07-25 16:14:00][rank0][INFO] After rotary embedding k_pe:  - Shape: torch.Size([1, 2048, 1, 64]) Mean: -0.056885, Min: -2.390625, Max: 2.281250, Std: 0.605469, First 10 values: [-0.28125, 0.255859375, 0.291015625, 0.07177734375, -0.263671875, -0.044189453125, 0.01611328125, 0.306640625, -0.1708984375, -0.33203125]
[2025-07-25 16:14:00][rank0][INFO] After attention wo:  - Shape: torch.Size([1, 2048, 7168]) Mean: 0.000009, Min: -0.351562, Max: 0.186523, Std: 0.015320, First 10 values: [-0.010009765625, -0.0018310546875, -0.0025482177734375, -0.00445556640625, -0.0033416748046875, -0.00018310546875, 0.00017547607421875, -0.002471923828125, -0.0003910064697265625, -0.0009918212890625]
[2025-07-25 16:14:00][rank0][INFO] Forward pass completed in 10.7649 seconds
[2025-07-25 16:14:00][rank0][INFO] Output shape: torch.Size([1, 129280])
[2025-07-25 16:14:00][rank0][INFO] Output stats - Mean: 0.0396, Min: -11.5625, Max: 10.7500
[2025-07-25 16:14:00][rank0][INFO] GPU memory allocated: 4.13 GB
[2025-07-25 16:14:00][rank0][INFO] GPU memory reserved: 5.20 GB
[2025-07-25 16:14:00][rank0][INFO] Rank 0 completed successfully
